{
    "name": "console",
    "version": "0.0.1",
    "license": "SEE LICENSE IN LICENSE",
    "scripts": {
        "postinstall": "concurrently npm:frontend-ci npm:backend-ci -c blue,cyan",
        "frontend-ci": "cd frontend && npm ci",
        "backend-ci": "cd backend && npm ci",
        "test": "concurrently npm:frontend-test npm:backend-test -c blue,cyan",
        "frontend-test": "cd frontend && npm test",
        "backend-test": "cd backend && npm test",
        "build": "concurrently npm:backend-build && concurrently npm:codegen-build && concurrently npm:frontend-build",
        "backend-build": "cd backend && npm run build",
        "codegen-build": "cd backend && npm run generate",
        "frontend-build": "cd frontend && npm run build",
        "start": "concurrently npm:frontend npm:_backend npm:_codegen -n 'Frontend, Backend, CodeGen' -c green,cyan,blue",
        "_backend": "cd backend && npm start",
        "frontend": "cd frontend && npm start",
        "_codegen": "cd frontend && npm run generate:watch",
        "clean": "concurrently npm:frontend-clean npm:backend-clean -c blue,cyan",
        "frontend-clean": "cd frontend && npm run clean",
        "backend-clean": "cd backend && npm run clean",
        "update": "npm run frontend-update && npm run backend-update",
        "frontend-update": "cd frontend && npm run update",
        "backend-update": "cd backend && npm run update",
        "docker:build": "docker build --pull --tag console .",
        "docker:run": "docker run --rm --env-file backend/.env console"
    },
    "dependencies": {
        "concurrently": "^5.3.0"
    }
}
